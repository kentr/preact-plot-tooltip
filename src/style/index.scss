@use "@material/tooltip/styles";
@use '@material/elevation/mixins' as elevation-mixins;
@use '@material/dom/dom';
@use '@material/feature-targeting/feature-targeting';
@use '@material/typography/typography';
@use "@material/tooltip/tooltip-theme";
@import '@material/tooltip/tooltip';

$color: #444;

html, body {
	height: 100%;
	width: 100%;
	padding: 0;
	margin: 0;
	background: #FAFAFA;
	font-family: 'Helvetica Neue', arial, sans-serif;
	font-weight: 400;
	color: $color;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

* {
	box-sizing: border-box;
}

#preact_root {
	height: 100%;
}

// Apply rich styles to standard tooltip.
// This is done because efforts to get rich tooltips working
// with SVG charts have failed.
// This code is modeled after the current version of @material/tooltip.
$query: feature-targeting.all();
$feat-structure: feature-targeting.create-target($query, structure);

.chart-tooltip {

	@include tooltip-theme.rich-text-ink-color(
		tooltip-theme.$rich-title-text-color,
		tooltip-theme.$rich-content-text-color,
		tooltip-theme.$rich-content-link-color,
		$query: $query
	);

	.tooltip__content {

		max-width: calc(#{$_rich_max-width} - (2 * #{$_content-margin}));
		align-self: stretch;
		margin: 0;
		font-size: var(--mdc-typography-caption-font-size, 0.75rem);

	}
}

.tooltip__surface {
	@include elevation-mixins.overlay-dimensions(100%, $query: $query);
	@include elevation-mixins.elevation(2, $query: $query);
	align-items: flex-start;
	border-radius: $_rich_corner_radius;
	display: flex;
	flex-direction: column;
	line-height: $_rich_line-height;
	min-height: $_min-height;
	min-width: $_min-width;
	max-width: $_rich_max-width;
	position: relative;
	background-color: tooltip-theme.$rich-background-color;
}
